AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploys the aws load balancer controller to an existing kubernetes cluster (qs-1qnl6p00n)"
Metadata:
  QSLint:
    Exclusions: [W9002, W9003, W9004, W9006]
Parameters:
  OIDCIssuerURLWithoutProtocol:
    Type: String
  EksClusterName:
    Type: String
Resources:
  LoadBalancerControllerIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:${AWS::Partition}:iam::${AWS::AccountId}:oidc-provider/${OIDCIssuerURLWithoutProtocol}"
              },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "${OIDCIssuerURLWithoutProtocol}:sub": "system:serviceaccount:kube-system:aws-load-balancer-controller"
                }
              }
            }
          ]
        }
      Policies:
      - PolicyName: load-balancer-controller-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'iam:CreateServiceLinkedRole'
                - 'ec2:DescribeAccountAttributes'
                - 'ec2:DescribeAddresses'
                - 'ec2:DescribeInternetGateways'
                - 'ec2:DescribeVpcs'
                - 'ec2:DescribeSubnets'
                - 'ec2:DescribeSecurityGroups'
                - 'ec2:DescribeInstances'
                - 'ec2:DescribeNetworkInterfaces'
                - 'ec2:DescribeTags'
                - 'elasticloadbalancing:DescribeLoadBalancers'
                - 'elasticloadbalancing:DescribeLoadBalancerAttributes'
                - 'elasticloadbalancing:DescribeListeners'
                - 'elasticloadbalancing:DescribeListenerCertificates'
                - 'elasticloadbalancing:DescribeSSLPolicies'
                - 'elasticloadbalancing:DescribeRules'
                - 'elasticloadbalancing:DescribeTargetGroups'
                - 'elasticloadbalancing:DescribeTargetGroupAttributes'
                - 'elasticloadbalancing:DescribeTargetHealth'
                - 'elasticloadbalancing:DescribeTags'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'cognito-idp:DescribeUserPoolClient'
                - 'acm:ListCertificates'
                - 'acm:DescribeCertificate'
                - 'iam:ListServerCertificates'
                - 'iam:GetServerCertificate'
                - 'waf-regional:GetWebACL'
                - 'waf-regional:GetWebACLForResource'
                - 'waf-regional:AssociateWebACL'
                - 'waf-regional:DisassociateWebACL'
                - 'wafv2:GetWebACL'
                - 'wafv2:GetWebACLForResource'
                - 'wafv2:AssociateWebACL'
                - 'wafv2:DisassociateWebACL'
                - 'shield:GetSubscriptionState'
                - 'shield:DescribeProtection'
                - 'shield:CreateProtection'
                - 'shield:DeleteProtection'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'ec2:AuthorizeSecurityGroupIngress'
                - 'ec2:RevokeSecurityGroupIngress'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'ec2:CreateSecurityGroup'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'ec2:CreateTags'
              Resource: !Sub 'arn:${AWS::Partition}:ec2:*:*:security-group/*'
              Condition:
                StringEquals:
                  'ec2:CreateAction': CreateSecurityGroup
                'Null':
                  'aws:RequestTag/elbv2.k8s.aws/cluster': 'false'
            - Effect: Allow
              Action:
                - 'ec2:CreateTags'
                - 'ec2:DeleteTags'
              Resource: !Sub 'arn:${AWS::Partition}:ec2:*:*:security-group/*'
              Condition:
                'Null':
                  'aws:RequestTag/elbv2.k8s.aws/cluster': 'true'
                  'aws:ResourceTag/elbv2.k8s.aws/cluster': 'false'
            - Effect: Allow
              Action:
                - 'ec2:AuthorizeSecurityGroupIngress'
                - 'ec2:RevokeSecurityGroupIngress'
                - 'ec2:DeleteSecurityGroup'
              Resource: '*'
              Condition:
                'Null':
                  'aws:ResourceTag/elbv2.k8s.aws/cluster': 'false'
            - Effect: Allow
              Action:
                - 'elasticloadbalancing:CreateLoadBalancer'
                - 'elasticloadbalancing:CreateTargetGroup'
              Resource: '*'
              Condition:
                'Null':
                  'aws:RequestTag/elbv2.k8s.aws/cluster': 'false'
            - Effect: Allow
              Action:
                - 'elasticloadbalancing:CreateListener'
                - 'elasticloadbalancing:DeleteListener'
                - 'elasticloadbalancing:CreateRule'
                - 'elasticloadbalancing:DeleteRule'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'elasticloadbalancing:AddTags'
                - 'elasticloadbalancing:RemoveTags'
              Resource:
                - !Sub 'arn:${AWS::Partition}:elasticloadbalancing:*:*:targetgroup/*/*'
                - !Sub 'arn:${AWS::Partition}:elasticloadbalancing:*:*:loadbalancer/net/*/*'
                - !Sub 'arn:${AWS::Partition}:elasticloadbalancing:*:*:loadbalancer/app/*/*'
              Condition:
                'Null':
                  'aws:RequestTag/elbv2.k8s.aws/cluster': 'true'
                  'aws:ResourceTag/elbv2.k8s.aws/cluster': 'false'
            - Effect: Allow
              Action:
                - 'elasticloadbalancing:ModifyLoadBalancerAttributes'
                - 'elasticloadbalancing:SetIpAddressType'
                - 'elasticloadbalancing:SetSecurityGroups'
                - 'elasticloadbalancing:SetSubnets'
                - 'elasticloadbalancing:DeleteLoadBalancer'
                - 'elasticloadbalancing:ModifyTargetGroup'
                - 'elasticloadbalancing:ModifyTargetGroupAttributes'
                - 'elasticloadbalancing:DeleteTargetGroup'
              Resource: '*'
              Condition:
                'Null':
                  'aws:ResourceTag/elbv2.k8s.aws/cluster': 'false'
            - Effect: Allow
              Action:
                - 'elasticloadbalancing:RegisterTargets'
                - 'elasticloadbalancing:DeregisterTargets'
              Resource: !Sub 'arn:${AWS::Partition}:elasticloadbalancing:*:*:targetgroup/*/*'
            - Effect: Allow
              Action:
                - 'elasticloadbalancing:SetWebAcl'
                - 'elasticloadbalancing:ModifyListener'
                - 'elasticloadbalancing:AddListenerCertificates'
                - 'elasticloadbalancing:RemoveListenerCertificates'
                - 'elasticloadbalancing:ModifyRule'
              Resource: '*'
  LoadBalancerControllerServiceAccount:
    Type: "AWSQS::Kubernetes::Resource"
    Properties:
      ClusterName: !Ref EksClusterName
      Namespace: kube-system
      Manifest: !Sub |
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          labels:
            app.kubernetes.io/name: aws-load-balancer-controller
          annotations:
            eks.amazonaws.com/role-arn: ${LoadBalancerControllerIAMRole.Arn}
          name: aws-load-balancer-controller
  LoadBalancerControllerHelmChart:
    Type: "AWSQS::Kubernetes::Helm"
    DependsOn: LoadBalancerControllerServiceAccount
    Metadata: { cfn-lint: { config: { ignore_checks: [ E3012 ] } } }
    Properties:
      ClusterID: !Ref EksClusterName
      Namespace: kube-system
      Repository: https://aws.github.io/eks-charts
      Chart: aws-load-balancer-controller
      Values:
        clusterName: !Ref EksClusterName
        serviceAccount.create: false
        serviceAccount.name: aws-load-balancer-controller

Outputs:
  LoadBalancerControllerHelmChart:
    Value: !Ref LoadBalancerControllerHelmChart
