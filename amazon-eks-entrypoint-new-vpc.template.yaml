AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys an EKS cluster in a new VPC (qs-1p7nknoht)
Metadata:
  AutoInstance:
    NodeInstanceType:
      InstanceFilters:
      - [['PV'], "!=", "SupportedVirtualizationTypes"]
  QuickStartDocumentation:
    EntrypointName: "Launch into a new VPC"
    Order: Index a
  LintSpellExclude:
    - Kubernetes
    - ARNs
    - Resource Names
    - autoscaler
    - IOPS
    - EfsStorageClass
    - Lambda
    - maxIO
    - Resource Name
    - Enabled
    - Disabled
    - Prometheus
    - Encrypt
    - Fargate
    - namespace
    - Snyk
    - Security
    - New Relic
    - APN
    - '"No"'
    - Windows
    - '"Config '
    - '(Optional)'
    - Unmanaged
    - Node
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Basic configuration
        Parameters:
          - AvailabilityZones
          - RemoteAccessCIDR
          - KeyPairName
          - ConfigSetName
          - PerAccountSharedResources
          - PerRegionSharedResources
      - Label:
          default: VPC network configuration
        Parameters:
          - NumberOfAZs
          - VPCCIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PrivateSubnet3CIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - PublicSubnet3CIDR
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - ProvisionBastionHost
      - Label:
          default: Amazon EKS configuration
        Parameters:
          - EKSClusterName
          - EKSPublicAccessEndpoint
          - AdditionalEKSAdminUserArn
          - AdditionalEKSAdminRoleArn
          - FargateNamespaces
          - FargateLabels
      - Label:
          default: Default EKS node group configuration
        Parameters:
          - NodeInstanceType
          - NumberOfNodes
          - MaxNumberOfNodes
          - NodeGroupOS
          - NodeGroupType
          - NodeInstanceFamily
      - Label:
          default: Snyk monitor [APN security partner]
        Parameters:
          - SnykIntegration
          - SnykIntegrationId
      - Label:
          default: New Relic infrastructure [APN monitoring partner]
        Parameters:
          - NewRelicIntegration
          - NewRelicLicenseKey
      - Label:
          default: Kubernetes add-ins
        Parameters:
          - ALBIngressController
          - ClusterAutoScaler
          - EfsStorageClass
          - MonitoringStack
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
          - TestSuite
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      KeyPairName:
        default: SSH key name
      PrivateSubnet1CIDR:
        default: Private subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private subnet 2 CIDR
      PrivateSubnet3CIDR:
        default: Private subnet 3 CIDR
      PublicSubnet1CIDR:
        default: Public subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public subnet 2 CIDR
      PublicSubnet3CIDR:
        default: Public subnet 3 CIDR
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      RemoteAccessCIDR:
        default: Allowed external access CIDR
      VPCCIDR:
        default: VPC CIDR
      NodeInstanceType:
        default: Instance type
      NumberOfNodes:
        default: Number of nodes
      MaxNumberOfNodes:
        default: Maximum number of nodes
      AdditionalEKSAdminUserArn:
        default: Additional EKS admin ARN (IAM user)
      AdditionalEKSAdminRoleArn:
        default: Additional EKS admin ARN (IAM role)
      ClusterAutoScaler:
        default: Cluster autoscaler
      EfsStorageClass:
        default: EFS storage class
      MonitoringStack:
        default: Monitoring stack
      NumberOfAZs:
        default: Number of Availability Zones
      ProvisionBastionHost:
        default: Provision bastion host
      EKSPublicAccessEndpoint:
        default: EKS public access endpoint
      ALBIngressController:
        default: ALB ingress controller
      FargateNamespaces:
        default: Fargate namespaces
      FargateLabels:
        default: Fargate labels
      EKSClusterName:
        default: EKS cluster name
      SnykIntegrationId:
        default: Integration ID
      SnykIntegration:
        default: Security monitoring integration
      NewRelicIntegration:
        default: Infrastructure monitoring integration
      NewRelicLicenseKey:
        default: License key
      PerAccountSharedResources:
        default: Per account shared resources
      PerRegionSharedResources:
        default: Per region shared resources
      ConfigSetName:
        default: Config set name
      TestSuite:
        default: Test suite
      NodeGroupType:
        default: Node group type
      NodeInstanceFamily:
        default: Node instance family
      NodeGroupOS:
        default: Node group OS
Parameters:
  AvailabilityZones:
    Description: The list of Availability Zones to use for the subnets in the VPC. Three
      Availability Zones are used for this deployment, and the logical order of your
      selections is preserved.
    Type: List<AWS::EC2::AvailabilityZone::Name>
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you
      to securely connect to your instance after it launches.
    Type: AWS::EC2::KeyPair::KeyName
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: The CIDR block for private subnet 1 located in Availability Zone 1.
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: The CIDR block for private subnet 2 located in Availability Zone 2.
    Type: String
  PrivateSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.64.0/19
    Description: The CIDR block for private subnet 3 located in Availability Zone 3.
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.128.0/20
    Description: The CIDR block for the public (DMZ) subnet 1 located in Availability
      Zone 1.
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.144.0/20
    Description: The CIDR block for the public (DMZ) subnet 2 located in Availability
      Zone 2.
    Type: String
  PublicSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.160.0/20
    Description: The CIDR block for the public (DMZ) subnet 3 located in Availability
      Zone 3.
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), dots(.) and forward slash (/).
    Default: quickstart-amazon-eks/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), dots(.) and
      forward slash (/).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: The Region where the Quick Start S3 bucket (QSS3BucketName) is
      hosted. When using your own bucket, you must specify this value.
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is permitted to access the instances. We recommend
      that you set this value to a trusted IP range.
    Type: String
  EKSPublicAccessEndpoint:
    Type: String
    AllowedValues: [Enabled, Disabled]
    Default: Disabled
    Description: Configure access to the Kubernetes API server endpoint from outside of your VPC.
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: The CIDR block for the VPC.
    Type: String
  AdditionalEKSAdminUserArn:
    Default: ""
    Description: "(Optional) IAM user ARN to be granted admin access to the EKS cluster."
    Type: String
  AdditionalEKSAdminRoleArn:
    Default: ""
    Description: "(Optional) IAM role ARN to be granted admin access to the EKS cluster."
    Type: String
  NodeInstanceType:
    Default: t3.medium
    AllowedValues: ["t3a.nano", "t3.nano", "t2.nano", "t3a.micro", "t3.micro", "t2.micro", "t3a.small", "t3.small", "t2.small", "t3a.medium", "t3.medium", "t2.medium", "t3a.large", "c5a.large", "t3.large", "c5.large", "m5a.large", "c5ad.large", "t2.large", "c5d.large", "m5.large", "c4.large", "m4.large", "m5ad.large", "c5n.large", "r5a.large", "m5d.large", "m5n.large", "r5.large", "r5ad.large", "r4.large", "m5dn.large", "r5d.large", "r5n.large", "t3a.xlarge", "c5a.xlarge", "i3.large", "t3.xlarge", "r5dn.large", "c5.xlarge", "c5ad.xlarge", "m5a.xlarge", "t2.xlarge", "z1d.large", "m5.xlarge", "c5d.xlarge", "c4.xlarge", "m4.xlarge", "m5ad.xlarge", "c5n.xlarge", "r5a.xlarge", "m5d.xlarge", "i3en.large", "m5n.xlarge", "r5.xlarge", "r5ad.xlarge", "r4.xlarge", "m5dn.xlarge", "r5d.xlarge", "r5n.xlarge", "t3a.2xlarge", "c5a.2xlarge", "i3.xlarge", "t3.2xlarge", "r5dn.xlarge", "c5.2xlarge", "m5a.2xlarge", "c5ad.2xlarge", "inf1.xlarge", "t2.2xlarge", "z1d.xlarge", "c5d.2xlarge", "m5.2xlarge", "c4.2xlarge", "m4.2xlarge", "m5ad.2xlarge", "c5n.2xlarge", "r5a.2xlarge", "m5d.2xlarge", "i3en.xlarge", "h1.2xlarge", "m5n.2xlarge", "r5.2xlarge", "r5ad.2xlarge", "g4dn.xlarge", "r4.2xlarge", "m5dn.2xlarge", "r5d.2xlarge", "inf1.2xlarge", "r5n.2xlarge", "c5a.4xlarge", "i3.2xlarge", "r5dn.2xlarge", "c5.4xlarge", "c5ad.4xlarge", "m5a.4xlarge", "d2.xlarge", "z1d.2xlarge", "g3s.xlarge", "g4dn.2xlarge", "c5d.4xlarge", "m5.4xlarge", "c4.4xlarge", "m4.4xlarge", "m5ad.4xlarge", "x1e.xlarge", "c5n.4xlarge", "p2.xlarge", "r5a.4xlarge", "i3en.2xlarge", "m5d.4xlarge", "h1.4xlarge", "m5n.4xlarge", "r5.4xlarge", "r5ad.4xlarge", "r4.4xlarge", "m5dn.4xlarge", "z1d.3xlarge", "g3.4xlarge", "r5d.4xlarge", "r5n.4xlarge", "g4dn.4xlarge", "c5a.8xlarge", "i3.4xlarge", "r5dn.4xlarge", "i3en.3xlarge", "m5a.8xlarge", "c5ad.8xlarge", "d2.2xlarge", "c5.9xlarge", "m5.8xlarge", "c4.8xlarge", "m5ad.8xlarge", "f1.2xlarge", "x1e.2xlarge", "c5d.9xlarge", "m5d.8xlarge", "r5a.8xlarge", "c5a.12xlarge", "h1.8xlarge", "inf1.6xlarge", "m5n.8xlarge", "c5n.9xlarge", "i3en.24xlarge", "i3en.metal", "p3.8xlarge", "f1.16xlarge", "x1.32xlarge", "x1e.16xlarge", "p2.16xlarge", "m4.10xlarge", "r5.8xlarge", "c5.12xlarge", "c5ad.12xlarge", "m5a.12xlarge", "r5ad.8xlarge", "r4.8xlarge", "m5dn.8xlarge", "g4dn.8xlarge", "z1d.6xlarge", "g3.8xlarge", "c5d.12xlarge", "m5.12xlarge", "r5d.8xlarge", "r5n.8xlarge", "c5a.16xlarge", "m5ad.12xlarge", "i3.8xlarge", "r5dn.8xlarge", "r5a.12xlarge", "m5d.12xlarge", "i3en.6xlarge", "m5a.16xlarge", "c5ad.16xlarge", "d2.4xlarge", "m5n.12xlarge", "p3.16xlarge", "x1e.32xlarge", "r5.12xlarge", "p3.2xlarge", "c5.18xlarge", "m5.16xlarge", "r5ad.12xlarge", "m4.16xlarge", "m5dn.12xlarge", "m5ad.16xlarge", "f1.4xlarge", "x1e.4xlarge", "c5d.18xlarge", "r5d.12xlarge", "r5n.12xlarge", "m5d.16xlarge", "r5a.16xlarge", "c5a.24xlarge", "h1.16xlarge", "m5n.16xlarge", "c5n.18xlarge", "c5n.metal", "g4dn.12xlarge", "p3dn.24xlarge", "r5dn.12xlarge", "r5.16xlarge", "c5.metal", "c5.24xlarge", "c5ad.24xlarge", "m5a.24xlarge", "r5ad.16xlarge", "r4.16xlarge", "m5dn.16xlarge", "g4dn.16xlarge", "z1d.metal", "z1d.12xlarge", "g3.16xlarge", "m5.metal", "m5.24xlarge", "r5d.16xlarge", "c5d.24xlarge", "c5d.metal", "r5n.16xlarge", "m5ad.24xlarge", "i3.metal", "i3.16xlarge", "r5dn.16xlarge", "i3en.12xlarge", "m5d.metal", "m5d.24xlarge", "r5a.24xlarge", "d2.8xlarge", "m5n.24xlarge", "r5.24xlarge", "r5.metal", "r5ad.24xlarge", "m5dn.24xlarge", "x1.16xlarge", "x1e.8xlarge", "r5d.24xlarge", "r5d.metal", "r5n.24xlarge", "p2.8xlarge", "inf1.24xlarge", "g4dn.metal", "r5dn.24xlarge"]
    ConstraintDescription: Must be a valid EC2 instance type
    Description: EC2 instance type.
    Type: String
  NumberOfNodes:
    Default: 3
    Description: The number of Amazon EKS node instances. The default is one for each of the three Availability Zones.
    Type: Number
  MaxNumberOfNodes:
    Default: 3
    Description: The maximum number of Amazon EKS node instances. The default is three nodes.
    Type: Number
  ClusterAutoScaler:
    Type: String
    AllowedValues: [ Enabled, Disabled ]
    Default: Disabled
    Description: Choose "Enabled" to enable Kubernetes cluster autoscaler.
  EfsStorageClass:
    Type: String
    AllowedValues: [ Enabled, Disabled ]
    Default: Disabled
    Description: Choose "Enabled" to enable EFS storage class.
  MonitoringStack:
    Type: String
    AllowedValues: [ "Prometheus + Grafana", "None" ]
    Default: "None"
    Description: Enable monitoring stack with "Prometheus+Grafana."
  NumberOfAZs:
    Type: String
    AllowedValues: ["2", "3"]
    Default: "3"
    Description: Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.
  ProvisionBastionHost:
    Type: String
    AllowedValues: [ "Enabled", "Disabled" ]
    Default: "Enabled"
    Description: Skip creating a bastion host by choosing "Disabled."
  ALBIngressController:
    Type: String
    AllowedValues: [ "Enabled", "Disabled" ]
    Default: "Disabled"
    Description: Choose "Enabled" to deploy the ALB ingress controller.
  FargateNamespaces:
    Type: String
    Default: ""
    Description: "(Optional) Comma separated list of namespaces that Fargate should be enabled for."
  FargateLabels:
    Type: String
    Default: ""
    Description: >-
      Requires at least one Fargate namespace to be specified. Comma separated list of key=value pod labels.
      For a pod to be run on Fargate, all labels must match and it must be running in a namespace defined in
      "Fargate namespaces."
  EKSClusterName:
    Type: String
    Default: ""
    Description: "(Optional) Name for the EKS cluster. If left blank one will be auto-generated. Must be unique within the Region."
  SnykIntegrationId:
    Type: String
    AllowedPattern: '^[a-z0-9-]{36}$|^$'
    Default: ""
    Description: 'If "Snyk integration" is set to "Enabled", this must be provided. For more information see https://support.snyk.io/hc/en-us/articles/360003916158-Install-the-Snyk-controller-with-Helm .'
  SnykIntegration:
    Type: String
    AllowedValues: [Enabled, Disabled]
    Default: Disabled
    Description: "For more information see https://github.com/aws-quickstart/quickstart-eks-snyk/ ."
  NewRelicLicenseKey:
    Type: String
    Default: ""
    NoEcho: true
    Description: 'If "New Relic integration" is set to "Enabled", this must be provided. For more information see https://docs.newrelic.com/docs/accounts/install-new-relic/account-setup/license-key .'
  NewRelicIntegration:
    Type: String
    AllowedValues: [Enabled, Disabled]
    Default: Disabled
    Description: For more information see https://github.com/aws-quickstart/quickstart-eks-newrelic-infrastructure/ ."
  PerAccountSharedResources:
    Type: String
    AllowedValues: ['Yes', 'No']
    Default: 'Yes'
    Description: Choose "No" if you have already deployed another EKS Quick Start stack in this AWS account.
  PerRegionSharedResources:
    Type: String
    AllowedValues: ['Yes', 'No']
    Default: 'Yes'
    Description: Choose "No" if you have already deployed another EKS Quick Start stack in this Region.
  ConfigSetName:
    Type: String
    Default: ""
    Description: >-
      (Optional) This name is used to map advanced parameters to an EKS cluster. If you have launched an advanced
      configuration stack and would like to apply it's values to this cluster, this name must match the "Config set name"
      parameter in that stack. If left blank a new config set will be created using default values.
  TestSuite:
    Type: String
    AllowedValues: [Enabled, Disabled]
    Default: Disabled
    Description: Deploys a test stack that tests components of the Quick Start.
  NodeInstanceFamily:
    AllowedValues: ['Standard', 'ARM', 'GPU']
    Type: String
    Description: Choose the instance family to match the value of "Node instance type."
  NodeGroupType:
    Type: String
    AllowedValues: [ Managed, Unmanaged ]
    Default: Managed
    Description: Choose "Unmanaged" to create an auto-scaling group without using the EKS managed node groups feature.
  NodeGroupOS:
    AllowedValues:
      - 'Amazon Linux 2'
      - 'Bottlerocket'
      - 'Windows'
    Default: 'Amazon Linux 2'
    Description: The operating system to be used for the node instances. Note that if you choose "Windows" an additional
      Amazon Linux node group is also created.
    Type: String
Conditions:
  CreateAdvancedConfigWithDefaults: !Equals [!Ref ConfigSetName, '']
  CreatePerAccountSharedResources: !Equals [!Ref PerAccountSharedResources, 'Yes']
  CreatePerRegionSharedResources: !Equals [!Ref PerRegionSharedResources, 'Yes']
  3AZDeployment: !Equals [!Ref NumberOfAZs, "3"]
  2AZDeployment: !Or
    - !Equals [!Ref NumberOfAZs, "2"]
    - !Equals [!Ref NumberOfAZs, "3"]
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  WindowsNodes: !Equals [NodeGroupOS, 'Windows']
Mappings:
  Config:
    Prefix: { Value: 'eks-quickstart' }
Resources:
  AdvancedConfigDefaultsStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateAdvancedConfigWithDefaults
    Metadata: { cfn-lint: { config: { ignore_checks: [E9902, W9901] } } }
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks-advanced-configuration.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        ConfigSetName: !Ref AWS::StackName
        NodeVolumeSize: !If [WindowsNodes, 50, !Ref 'AWS::NoValue']
  AccountSharedResources:
    Type: AWS::CloudFormation::Stack
    Condition: CreatePerAccountSharedResources
    DeletionPolicy: Retain
    Metadata: { cfn-lint: { config: { ignore_checks: [W3011] } } }
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks-per-account-resources.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Tags: [{Key: !FindInMap [Config, Prefix, Value], Value: AccountSharedResources}]
  RegionalSharedResources:
    Type: AWS::CloudFormation::Stack
    Condition: CreatePerRegionSharedResources
    DeletionPolicy: Retain
    Metadata:
      cfn-lint: { config: { ignore_checks: [W3011] } }
      DependsOn: !If [CreatePerAccountSharedResources, !Ref AccountSharedResources, !Ref 'AWS::NoValue']
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks-per-region-resources.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
      Tags: [{Key: !FindInMap [Config, Prefix, Value], Value: RegionalSharedResources}]
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Metadata:
      cfn-lint: { config: { ignore_checks: [ W9901 ] } }
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AvailabilityZones: !Join [ ',', !Ref 'AvailabilityZones' ]
        KeyPairName: !Ref 'KeyPairName'
        NumberOfAZs: !Ref 'NumberOfAZs'
        PrivateSubnet1ACIDR: !Ref 'PrivateSubnet1CIDR'
        PrivateSubnet2ACIDR: !Ref 'PrivateSubnet2CIDR'
        PrivateSubnet3ACIDR: !Ref 'PrivateSubnet3CIDR'
        PrivateSubnetATag2: "kubernetes.io/role/internal-elb="
        PublicSubnet1CIDR: !Ref 'PublicSubnet1CIDR'
        PublicSubnet2CIDR: !Ref 'PublicSubnet2CIDR'
        PublicSubnet3CIDR: !Ref 'PublicSubnet3CIDR'
        PublicSubnetTag2: "kubernetes.io/role/elb="
        VPCCIDR: !Ref 'VPCCIDR'
  EKSStack:
    Type: AWS::CloudFormation::Stack
    Metadata:
      DependsOn:
        - !If [CreatePerRegionSharedResources, !Ref RegionalSharedResources, !Ref 'AWS::NoValue']
        - !If [CreatePerAccountSharedResources, !Ref AccountSharedResources, !Ref 'AWS::NoValue']
      cfn-lint: { config: { ignore_checks: [ W9901 ] } }
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        PublicSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        PublicSubnet2ID: !If
          - 2AZDeployment
          - !GetAtt VPCStack.Outputs.PublicSubnet2ID
          - !Ref AWS::NoValue
        PublicSubnet3ID: !If
          - 3AZDeployment
          - !GetAtt VPCStack.Outputs.PublicSubnet3ID
          - !Ref AWS::NoValue
        KeyPairName: !Ref KeyPairName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        QSS3BucketRegion: !Ref QSS3BucketRegion
        PrivateSubnet1ID: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        PrivateSubnet2ID: !If
          - 2AZDeployment
          - !GetAtt VPCStack.Outputs.PrivateSubnet2AID
          - !Ref AWS::NoValue
        PrivateSubnet3ID: !If
          - 3AZDeployment
          - !GetAtt VPCStack.Outputs.PrivateSubnet3AID
          - !Ref AWS::NoValue
        NumberOfNodes: !Ref NumberOfNodes
        MaxNumberOfNodes: !Ref MaxNumberOfNodes
        NodeGroupOS: !Ref NodeGroupOS
        NodeGroupType: !Ref NodeGroupType
        NodeInstanceFamily: !Ref NodeInstanceFamily
        NodeInstanceType: !Ref NodeInstanceType
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        AdditionalEKSAdminUserArn: !Ref AdditionalEKSAdminUserArn
        AdditionalEKSAdminRoleArn: !Ref AdditionalEKSAdminRoleArn
        VPCID: !GetAtt VPCStack.Outputs.VPCID
        ProvisionClusterAutoScaler: !Ref ClusterAutoScaler
        EfsStorageClass: !Ref EfsStorageClass
        ProvisionMonitoringStack: !Ref MonitoringStack
        ProvisionBastionHost: !Ref ProvisionBastionHost
        EKSPublicAccessEndpoint: !Ref EKSPublicAccessEndpoint
        ProvisionALBIngressController: !Ref ALBIngressController
        FargateLabels: !Ref FargateLabels
        FargateNamespaces: !Ref FargateNamespaces
        EKSClusterName: !Ref EKSClusterName
        SnykIntegrationId: !Ref SnykIntegrationId
        SnykIntegration: !Ref SnykIntegration
        NewRelicLicenseKey: !Ref NewRelicLicenseKey
        NewRelicIntegration: !Ref NewRelicIntegration
        ConfigSetName: !If [CreateAdvancedConfigWithDefaults, !Ref 'AWS::StackName', !Ref ConfigSetName]
        TestSuite: !Ref TestSuite
Outputs:
  EKSClusterName:
    Value: !GetAtt EKSStack.Outputs.EKSClusterName
  BastionIP:
    Value: !GetAtt EKSStack.Outputs.BastionIP
  BastionSecurityGroup:
    Value: !GetAtt EKSStack.Outputs.BastionSecurityGroup
  NodeGroupSecurityGroup:
    Value: !GetAtt EKSStack.Outputs.NodeGroupSecurityGroup
