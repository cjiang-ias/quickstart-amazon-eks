AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys EKS nodes into an existing VPC (qs-1p7nknoid)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PrivateSubnet3ID
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - KeyPairName
          - NodeAMIOS
      - Label:
          default: EKS Configuration
        Parameters:
          - NodeInstanceType
          - NumberOfNodes
          - MaxNumberOfNodes
          - NodeGroupName
          - NodeVolumeSize
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      KeyPairName:
        default: SSH Key Name
      NodeAMIOS:
        default: Node AMI Operating System
      PrivateSubnet1ID:
        default: Private Subnet 1 ID
      PrivateSubnet2ID:
        default: Private Subnet 2 ID
      PrivateSubnet3ID:
        default: Private Subnet 3 ID
      VPCID:
        default: VPC ID
      NodeInstanceType:
        default: Nodes Instance Type
      NumberOfNodes:
        default: Number of Nodes
      MaxNumberOfNodes:
        default: Maximum number of Nodes
      NodeGroupName:
        default: Node Group Name
      NodeVolumeSize:
        default: Node Volume Size
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
  AWSAMIRegionMap:
    Filters:
      AMZNEKS113:
        name: 'amazon-eks-node-1.13-v20??????'
        owner-id: '602401143452'
      AMZNEKS113GPU:
        name: 'amazon-eks-gpu-node-1.13-v20??????'
        owner-id: '602401143452'
      AMZNEKS111:
        name: 'amazon-eks-node-1.11-v20??????'
        owner-id: '602401143452'
      AMZNEKS111GPU:
        name: 'amazon-eks-gpu-node-1.11-v20??????'
        owner-id: '602401143452'
      AMZNEKS112:
        name: 'amazon-eks-node-1.12-v20??????'
        owner-id: '602401143452'
      AMZNEKS112GPU:
        name: 'amazon-eks-gpu-node-1.12-v20??????'
        owner-id: '602401143452'
      SLES15EKS113:
        name: 'suse-sles-15-v20??????-hvm-ssd-x86_64'
        owner-id: '013907871322'
      SLES15EKS113GPU:
        name: 'suse-sles-15-v20??????-hvm-ssd-x86_64'
        owner-id: '013907871322'
      SLES15EKS111:
        name: 'suse-sles-15-v20??????-hvm-ssd-x86_64'
        owner-id: '013907871322'
      SLES15EKS111GPU:
        name: 'suse-sles-15-v20??????-hvm-ssd-x86_64'
        owner-id: '013907871322'
      SLES15EKS112:
        name: 'suse-sles-15-v20??????-hvm-ssd-x86_64'
        owner-id: '013907871322'
      SLES15EKS112GPU:
        name: 'suse-sles-15-v20??????-hvm-ssd-x86_64'
        owner-id: '013907871322'
Parameters:
  KeyPairName:
    Description: Name of an existing EC2 key pair. All instances will launch with
      this key pair.
    Type: AWS::EC2::KeyPair::KeyName
  NodeAMIOS:
    AllowedValues:
      - Amazon-Linux-HVM
      - SUSE-SLES-15-HVM
    Default: Amazon-Linux-HVM
    Description: The Linux distribution for the AMI to be used for the node
      instances.
    Type: String
  PrivateSubnet1ID:
    Description: ID of private subnet 1 in Availability Zone 1 for the Workload (e.g.,
      subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2ID:
    Description: ID of private subnet 2 in Availability Zone 2 for the Workload (e.g.,
      subnet-b1f432cd)
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet3ID:
    Description: ID of private subnet 3 in Availability Zone 3 for the Workload (e.g.,
      subnet-b1f4a2cd)
    Type: AWS::EC2::Subnet::Id
  VPCID:
    Description: ID of your existing VPC for deployment
    Type: AWS::EC2::VPC::Id
  NodeInstanceType:
    Default: t3.medium
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Node instances
    Type: String
  NumberOfNodes:
    Default: 3
    Description: Number of EKS node instances
    Type: Number
  MaxNumberOfNodes:
    Default: ""
    Description: "[OPTIONAL] The maximum number of Amazon EKS node instances, if left blank will be set to the same value as NumberOfNodes"
    Type: String
  NodeGroupName:
    Default: Default
    Description: Name for EKS node group
    Type: String
  NodeVolumeSize:
    Default: 20
    Description: Size for node volumes
    Type: String
  EKSControlPlane:
    Description: Name of the EKS cluster to join
    Type: String
  BootstrapArguments:
    Description: Arguments to pass to the bootstrap script. See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami
    Type: String
    Default: ""
  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  NodeInstanceProfile:
    Type: String
  NodeInstanceRoleName:
    Type: String
  KubernetesVersion:
    Type: String
    AllowedValues: [ "1.13", "1.12", "1.11" ]
    Default: "1.13"
  TargetGroupARNs:
    Type: CommaDelimitedList
    Default: ""
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), dots(.) and forward slash (/).
    Default: quickstart-amazon-eks/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), dots(.) and
      forward slash (/).
    Type: String
  CustomAmiId:
    Type: String
    Default: ""
Conditions:
  MaxNodes: !Not [ !Equals [ !Ref MaxNumberOfNodes, "" ] ]
  AmznOS: !Equals
    - !Ref NodeAMIOS
    - Amazon-Linux-HVM
  SuseOS: !Equals
    - !Ref NodeAMIOS
    - SUSE-SLES-15-HVM
  DisableTargetGroups: !Equals
    - !Join [",", !Ref 'TargetGroupARNs' ]
    - ""
  IsSingleInstance: !Equals
    - !Ref NumberOfNodes
    - 1
  UseCustomAmi: !Not [ !Equals [ !Ref CustomAmiId, "" ] ]
Mappings:
  K8sVersionMap:
    "1.12":
      BinaryPath: 1.12.7/2019-03-27/bin/linux/amd64
      STD: EKS112
      GPU: EKS112GPU
    "1.11":
      BinaryPath: 1.11.9/2019-03-27/bin/linux/amd64
      STD: EKS111
      GPU: EKS111GPU
    "1.13":
      BinaryPath: 1.13.7/2019-06-11/bin/linux/amd64
      STD: EKS113
      GPU: EKS113GPU
  InstanceTypes:
    t2.small: { Type: STD }
    t2.medium: { Type: STD }
    t2.large: { Type: STD }
    t2.xlarge: { Type: STD }
    t2.2xlarge: { Type: STD }
    t3.nano: { Type: STD }
    t3.micro: { Type: STD }
    t3.small: { Type: STD }
    t3.medium: { Type: STD }
    t3.large: { Type: STD }
    t3.xlarge: { Type: STD }
    t3.2xlarge: { Type: STD }
    m3.medium: { Type: STD }
    m3.large: { Type: STD }
    m3.xlarge: { Type: STD }
    m3.2xlarge: { Type: STD }
    m4.large: { Type: STD }
    m4.xlarge: { Type: STD }
    m4.2xlarge: { Type: STD }
    m4.4xlarge: { Type: STD }
    m4.10xlarge: { Type: STD }
    m5.large: { Type: STD }
    m5.xlarge: { Type: STD }
    m5.2xlarge: { Type: STD }
    m5.4xlarge: { Type: STD }
    m5.12xlarge: { Type: STD }
    m5.24xlarge: { Type: STD }
    c4.large: { Type: STD }
    c4.xlarge: { Type: STD }
    c4.2xlarge: { Type: STD }
    c4.4xlarge: { Type: STD }
    c4.8xlarge: { Type: STD }
    c5.large: { Type: STD }
    c5.xlarge: { Type: STD }
    c5.2xlarge: { Type: STD }
    c5.4xlarge: { Type: STD }
    c5.9xlarge: { Type: STD }
    c5.18xlarge: { Type: STD }
    i3.large: { Type: STD }
    i3.xlarge: { Type: STD }
    i3.2xlarge: { Type: STD }
    i3.4xlarge: { Type: STD }
    i3.8xlarge: { Type: STD }
    i3.16xlarge: { Type: STD }
    r3.xlarge: { Type: STD }
    r3.2xlarge: { Type: STD }
    r3.4xlarge: { Type: STD }
    r3.8xlarge: { Type: STD }
    r4.large: { Type: STD }
    r4.xlarge: { Type: STD }
    r4.2xlarge: { Type: STD }
    r4.4xlarge: { Type: STD }
    r4.8xlarge: { Type: STD }
    r4.16xlarge: { Type: STD }
    x1.16xlarge: { Type: STD }
    x1.32xlarge: { Type: STD }
    p2.xlarge: { Type: GPU }
    p2.8xlarge: { Type: GPU }
    p2.16xlarge: { Type: GPU }
    p3.2xlarge: { Type: GPU }
    p3.8xlarge: { Type: GPU }
    p3.16xlarge: { Type: GPU }
    r5.large: { Type: STD }
    r5.xlarge: { Type: STD }
    r5.2xlarge: { Type: STD }
    r5.4xlarge: { Type: STD }
    r5.12xlarge: { Type: STD }
    r5.24xlarge: { Type: STD }
    r5d.large: { Type: STD }
    r5d.xlarge: { Type: STD }
    r5d.2xlarge: { Type: STD }
    r5d.4xlarge: { Type: STD }
    r5d.12xlarge: { Type: STD }
    r5d.24xlarge: { Type: STD }
    z1d.large: { Type: STD }
    z1d.xlarge: { Type: STD }
    z1d.2xlarge: { Type: STD }
    z1d.3xlarge: { Type: STD }
    z1d.6xlarge: { Type: STD }
    z1d.12xlarge: { Type: STD }
  OStoK8sVersionMap:
    Amazon-Linux-HVM:
      EKS112: AMZNEKS112
      EKS112GPU: AMZNEKS112GPU
      EKS111: AMZNEKS111
      EKS111GPU: AMZNEKS111GPU
      EKS113: AMZNEKS113
      EKS113GPU: AMZNEKS113GPU
    SUSE-SLES-15-HVM:
      EKS112: SLES15EKS112
      EKS112GPU: SLES15EKS112GPU
      EKS111: SLES15EKS111
      EKS111GPU: SLES15EKS111GPU
      EKS113: SLES15EKS113
      EKS113GPU: SLES15EKS113GPU
  AWSAMIRegionMap:
    ap-northeast-1:
      AMZNEKS113: ami-04c0f02f5e148c80a
      AMZNEKS113GPU: ami-0bf1b25bbd3821c5d
      AMZNEKS111: ami-07765e1384d2e372c
      AMZNEKS111GPU: ami-0ba3bc3dbd7325128
      AMZNEKS112: ami-0dfbca8d183884f02
      AMZNEKS112GPU: ami-0a4c38964fd5aa49e
      SLES15EKS113: ami-0e2debab987f825c8
      SLES15EKS113GPU: ami-0e2debab987f825c8
      SLES15EKS111: ami-0e2debab987f825c8
      SLES15EKS111GPU: ami-0e2debab987f825c8
      SLES15EKS112: ami-0e2debab987f825c8
      SLES15EKS112GPU: ami-0e2debab987f825c8
    ap-northeast-2:
      AMZNEKS113: ami-0b7997a20f8424fb1
      AMZNEKS113GPU: ami-08c00d59db13cdddc
      AMZNEKS111: ami-0656df091f27461cd
      AMZNEKS111GPU: ami-0731ac58838ab7de2
      AMZNEKS112: ami-0a9d12fe9c2a31876
      AMZNEKS112GPU: ami-04755a8eb51a8d931
      SLES15EKS113: ami-066d5639c834dd062
      SLES15EKS113GPU: ami-066d5639c834dd062
      SLES15EKS111: ami-066d5639c834dd062
      SLES15EKS111GPU: ami-066d5639c834dd062
      SLES15EKS112: ami-066d5639c834dd062
      SLES15EKS112GPU: ami-066d5639c834dd062
    ap-south-1:
      AMZNEKS113: ami-0410a80d323371237
      AMZNEKS113GPU: ami-018a894b44e99c344
      AMZNEKS111: ami-01d152acba5840ba2
      AMZNEKS111GPU: ami-082d0eed361133cbd
      AMZNEKS112: ami-0644de45344ce867e
      AMZNEKS112GPU: ami-001b8c7e420a9f22a
    ap-southeast-1:
      AMZNEKS113: ami-087e0fca60fb5737a
      AMZNEKS113GPU: ami-0fd63ebcc8fc5d795
      AMZNEKS111: ami-084e9f3625a1a4a09
      AMZNEKS111GPU: ami-0eac990c415d9d900
      AMZNEKS112: ami-040bdde117f3828ab
      AMZNEKS112GPU: ami-07d55ccb38a4b3b48
      SLES15EKS113: ami-05e20e49e8b150b28
      SLES15EKS113GPU: ami-05e20e49e8b150b28
      SLES15EKS111: ami-05e20e49e8b150b28
      SLES15EKS111GPU: ami-05e20e49e8b150b28
      SLES15EKS112: ami-05e20e49e8b150b28
      SLES15EKS112GPU: ami-05e20e49e8b150b28
    ap-southeast-2:
      AMZNEKS113: ami-082dfea752d9163f6
      AMZNEKS113GPU: ami-0eba59c2cfeef0c86
      AMZNEKS111: ami-03050c93b7e745696
      AMZNEKS111GPU: ami-0314013458ff4cc01
      AMZNEKS112: ami-01bfe815f644becc0
      AMZNEKS112GPU: ami-06e5e549f83e73a4c
      SLES15EKS113: ami-05283f9ba716bfbdc
      SLES15EKS113GPU: ami-05283f9ba716bfbdc
      SLES15EKS111: ami-05283f9ba716bfbdc
      SLES15EKS111GPU: ami-05283f9ba716bfbdc
      SLES15EKS112: ami-05283f9ba716bfbdc
      SLES15EKS112GPU: ami-05283f9ba716bfbdc
    eu-central-1:
      AMZNEKS113: ami-02d5e7ca7bc498ef9
      AMZNEKS113GPU: ami-06b62061e36b81904
      AMZNEKS111: ami-020f08a17c3c4251c
      AMZNEKS111GPU: ami-0dd88826b8d30c9c2
      AMZNEKS112: ami-09ed3f40a2b3c11f1
      AMZNEKS112GPU: ami-09b34b094923f45e0
      SLES15EKS113: ami-049da412f8aa4402a
      SLES15EKS113GPU: ami-049da412f8aa4402a
      SLES15EKS111: ami-049da412f8aa4402a
      SLES15EKS111GPU: ami-049da412f8aa4402a
      SLES15EKS112: ami-049da412f8aa4402a
      SLES15EKS112GPU: ami-049da412f8aa4402a
    eu-north-1:
      AMZNEKS113: ami-0c31ee32297e7397d
      AMZNEKS113GPU: ami-0852d52be14ab3218
      AMZNEKS111: ami-0fc8c638bc80fcecf
      AMZNEKS111GPU: ami-08e21b1774db8e2db
      AMZNEKS112: ami-022cd6a50742d611a
      AMZNEKS112GPU: ami-008ea836c6efd005c
      SLES15EKS113: ami-07a30c77d27e8e56e
      SLES15EKS113GPU: ami-07a30c77d27e8e56e
      SLES15EKS111: ami-07a30c77d27e8e56e
      SLES15EKS111GPU: ami-07a30c77d27e8e56e
      SLES15EKS112: ami-07a30c77d27e8e56e
      SLES15EKS112GPU: ami-07a30c77d27e8e56e
    eu-west-1:
      AMZNEKS113: ami-09bbefc07310f7914
      AMZNEKS113GPU: ami-0e6a695a0711f0a6e
      AMZNEKS111: ami-07d0c92a42077ec9b
      AMZNEKS111GPU: ami-0bfd7a4a4ec243d7d
      AMZNEKS112: ami-091fc251b67b776c3
      AMZNEKS112GPU: ami-071a5ee6f63de58a1
      SLES15EKS113: ami-0e9af5d23652a4a80
      SLES15EKS113GPU: ami-0e9af5d23652a4a80
      SLES15EKS111: ami-0e9af5d23652a4a80
      SLES15EKS111GPU: ami-0e9af5d23652a4a80
      SLES15EKS112: ami-0e9af5d23652a4a80
      SLES15EKS112GPU: ami-0e9af5d23652a4a80
    eu-west-2:
      AMZNEKS113: ami-0f03516f22468f14e
      AMZNEKS113GPU: ami-0d9acc6d48bca66be
      AMZNEKS111: ami-0ff8a4dc1632ee425
      AMZNEKS111GPU: ami-04f157495ea6b2ec4
      AMZNEKS112: ami-0bc8d0262346bd65e
      AMZNEKS112GPU: ami-06948a28c353db6b8
      SLES15EKS113: ami-0876188b59dd1fb0d
      SLES15EKS113GPU: ami-0876188b59dd1fb0d
      SLES15EKS111: ami-0876188b59dd1fb0d
      SLES15EKS111GPU: ami-0876188b59dd1fb0d
      SLES15EKS112: ami-0876188b59dd1fb0d
      SLES15EKS112GPU: ami-0876188b59dd1fb0d
    eu-west-3:
      AMZNEKS113: ami-051015c2c2b73aaea
      AMZNEKS113GPU: ami-0a4f9156e5af3d25e
      AMZNEKS111: ami-0569332dde21e3f1a
      AMZNEKS111GPU: ami-05c804ae583380e45
      AMZNEKS112: ami-0084dea61e480763e
      AMZNEKS112GPU: ami-047d0dd5ecf80b910
      SLES15EKS113: ami-0ae7860e976047351
      SLES15EKS113GPU: ami-0ae7860e976047351
      SLES15EKS111: ami-0ae7860e976047351
      SLES15EKS111GPU: ami-0ae7860e976047351
      SLES15EKS112: ami-0ae7860e976047351
      SLES15EKS112GPU: ami-0ae7860e976047351
    us-east-1:
      AMZNEKS113: ami-08c4955bcc43b124e
      AMZNEKS113GPU: ami-0dfd00a84f71d0e0e
      AMZNEKS111: ami-053e2ac42d872cc20
      AMZNEKS111GPU: ami-024374d07c2d6603f
      AMZNEKS112: ami-0200e65a38edfb7e1
      AMZNEKS112GPU: ami-0a6076b21f3d2941d
      SLES15EKS113: ami-0f26c5cd74a4707b4
      SLES15EKS113GPU: ami-0f26c5cd74a4707b4
      SLES15EKS111: ami-0f26c5cd74a4707b4
      SLES15EKS111GPU: ami-0f26c5cd74a4707b4
      SLES15EKS112: ami-0f26c5cd74a4707b4
      SLES15EKS112GPU: ami-0f26c5cd74a4707b4
    us-east-2:
      AMZNEKS113: ami-07ebcae043cf995aa
      AMZNEKS113GPU: ami-06679ec64827d719a
      AMZNEKS111: ami-088dad958fbfa643e
      AMZNEKS111GPU: ami-0d42763da2d0f9ed7
      AMZNEKS112: ami-0e8d353285e26a68c
      AMZNEKS112GPU: ami-0594af1d60a8ccc31
      SLES15EKS113: ami-0eecb5f7387df7711
      SLES15EKS113GPU: ami-0eecb5f7387df7711
      SLES15EKS111: ami-0eecb5f7387df7711
      SLES15EKS111GPU: ami-0eecb5f7387df7711
      SLES15EKS112: ami-0eecb5f7387df7711
      SLES15EKS112GPU: ami-0eecb5f7387df7711
    us-west-2:
      AMZNEKS113: ami-089d3b6350c1769a6
      AMZNEKS113GPU: ami-081361ac5fd4eb9a1
      AMZNEKS111: ami-0743039b7c66a18f5
      AMZNEKS111GPU: ami-087eb0b0b2342b023
      AMZNEKS112: ami-0f11fd98b02f12a4c
      AMZNEKS112GPU: ami-052c79e1fdd528e6e
      SLES15EKS113: ami-0ee8adc50e1dca1c3
      SLES15EKS113GPU: ami-0ee8adc50e1dca1c3
      SLES15EKS111: ami-0ee8adc50e1dca1c3
      SLES15EKS111GPU: ami-0ee8adc50e1dca1c3
      SLES15EKS112: ami-0ee8adc50e1dca1c3
      SLES15EKS112GPU: ami-0ee8adc50e1dca1c3
Resources:
  NodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for all nodes in the node group
      VpcId: !Ref VPCID
      Tags:
        - Key: !Sub "kubernetes.io/cluster/${EKSControlPlane}"
          Value: 'owned'
  NodeSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow nodes to communicate with each other
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: '-1'
      FromPort: 0
      ToPort: 65535
  NodeSecurityGroupFromControlPlaneIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow worker Kubelets and pods to receive communication from the cluster control plane
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 1025
      ToPort: 65535
  ControlPlaneEgressToNodeSecurityGroup:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow the cluster control plane to communicate with worker Kubelet and pods
      GroupId: !Ref ControlPlaneSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 1025
      ToPort: 65535
  NodeSecurityGroupFromControlPlaneOn443Ingress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow pods running extension API servers on port 443 to receive communication from cluster control plane
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
  ControlPlaneEgressToNodeSecurityGroupOn443:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow the cluster control plane to communicate with pods running extension API servers on port 443
      GroupId: !Ref ControlPlaneSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
  ClusterControlPlaneSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow pods to communicate with the cluster API Server
      GroupId: !Ref ControlPlaneSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
  NodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref NumberOfNodes
      LaunchConfigurationName: !Ref NodeLaunchConfig
      MinSize: !Ref NumberOfNodes
      MaxSize: !If [ MaxNodes, !Ref MaxNumberOfNodes, !Ref NumberOfNodes ]
      VPCZoneIdentifier: [ !Ref PrivateSubnet1ID, !Ref PrivateSubnet2ID, !Ref PrivateSubnet3ID ]
      TargetGroupARNs: !If [ DisableTargetGroups, !Ref "AWS::NoValue", !Ref TargetGroupARNs ]
      Tags:
        - Key: Name
          Value: !Sub "${EKSControlPlane}-${NodeGroupName}-Node"
          PropagateAtLaunch: true
        - Key: !Sub 'kubernetes.io/cluster/${EKSControlPlane}'
          Value: 'owned'
          PropagateAtLaunch: true
        - Key: k8s.io/cluster-autoscaler/enabled
          Value: 'true'
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: !Ref NumberOfNodes
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: !If [IsSingleInstance, 0, 1]
        MaxBatchSize: 1
        WaitOnResourceSignals : true
        PauseTime: PT15M
  NodeLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Auth:
          buckets:
            - !Ref QSS3BucketName
          roleName: !Ref NodeInstanceRoleName
          type: S3
      AWS::CloudFormation::Init:
        config:
          files:
            /tmp/worker/bootstrap.sh:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/bootstrap.sh
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/docker-daemon.json:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/docker-daemon.json
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/eni-max-pods.txt:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/eni-max-pods.txt
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/install-worker.sh:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/install-worker.sh
              group: root
              owner: root
              mode: '000755'
              authentication: S3Auth
            /tmp/worker/kubelet-config.json:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/kubelet-config.json
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/kubelet-kubeconfig:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/kubelet-kubeconfig
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/kubelet.service:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/kubelet.service
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/logrotate-kube-proxy:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/logrotate-kube-proxy
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
          commands:
            a-install:
              command: /tmp/worker/install-worker.sh
              env:
                BINARY_BUCKET_NAME: amazon-eks
                BINARY_BUCKET_PATH: !FindInMap
                  - K8sVersionMap
                  - !Ref KubernetesVersion
                  - BinaryPath
                BINARY_BUCKET_REGION: us-west-2
            b-bootstrap:
              command: !Sub /etc/eks/bootstrap.sh ${EKSControlPlane} ${BootstrapArguments}
    Properties:
      AssociatePublicIpAddress: false
      IamInstanceProfile: !Ref NodeInstanceProfile
      ImageId: !If
        - UseCustomAmi
        - !Ref CustomAmiId
        - !FindInMap
          - AWSAMIRegionMap
          - !Ref "AWS::Region"
          - !FindInMap
            - OStoK8sVersionMap
            - !Ref NodeAMIOS
            - !FindInMap
              - K8sVersionMap
              - !Ref KubernetesVersion
              - !FindInMap
                - InstanceTypes
                - !Ref NodeInstanceType
                - Type
      InstanceType: !Ref NodeInstanceType
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref NodeSecurityGroup
      BlockDeviceMappings:
        - DeviceName: !If [ SuseOS, /dev/sda1, /dev/xvda ]
          Ebs:
            VolumeSize: !Ref NodeVolumeSize
            VolumeType: gp2
            DeleteOnTermination: true
      UserData: !If
        - AmznOS
        - Fn::Base64:
            !Sub |
            #!/bin/bash
            set -o xtrace
            /etc/eks/bootstrap.sh ${EKSControlPlane} ${BootstrapArguments}
            /opt/aws/bin/cfn-signal --exit-code $? \
                  --stack  ${AWS::StackName} \
                  --resource NodeGroup  \
                  --region ${AWS::Region}
        - Fn::Base64:
            !Sub |
            #!/bin/bash -e

            if [ -e /etc/os-release ] && grep SLES /etc/os-release; then
                zypper in -y python2-setuptools
                update-alternatives --set easy_install /usr/bin/easy_install-2.7
            fi

            easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.zip
            /usr/bin/cfn-init \
                --stack ${AWS::StackName} \
                --resource NodeLaunchConfig \
                --region ${AWS::Region}
            /usr/bin/cfn-signal --exit-code $? \
                --stack ${AWS::StackName} \
                --resource NodeGroup \
                --region ${AWS::Region}
            if [ -e /etc/os-release ] && grep SLES /etc/os-release; then
                # Need to enable some kernel boot options and reboot
                sed -i 's|GRUB_CMDLINE_LINUX=""|GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1" |' /etc/default/grub
                grub2-mkconfig -o /boot/grub2/grub.cfg
                reboot
            fi
Outputs:
  EKSNodeSecurityGroup:
    Value: !Ref NodeSecurityGroup
  NodeAutoScalingGroup:
    Value: !Ref NodeGroup
