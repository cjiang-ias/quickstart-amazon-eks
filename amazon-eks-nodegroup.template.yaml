AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys EKS nodes into an existing VPC (qs-1p7nknoid)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PrivateSubnet3ID
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - KeyPairName
          - NodeAMIOS
      - Label:
          default: EKS Configuration
        Parameters:
          - NodeInstanceType
          - NumberOfNodes
          - MaxNumberOfNodes
          - NodeGroupName
          - NodeVolumeSize
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      KeyPairName:
        default: SSH Key Name
      NodeAMIOS:
        default: Node AMI Operating System
      PrivateSubnet1ID:
        default: Private Subnet 1 ID
      PrivateSubnet2ID:
        default: Private Subnet 2 ID
      PrivateSubnet3ID:
        default: Private Subnet 3 ID
      VPCID:
        default: VPC ID
      NodeInstanceType:
        default: Nodes Instance Type
      NumberOfNodes:
        default: Number of Nodes
      MaxNumberOfNodes:
        default: Maximum number of Nodes
      NodeGroupName:
        default: Node Group Name
      NodeVolumeSize:
        default: Node Volume Size
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
  AWSAMIRegionMap:
    Filters:
      AMZNEKS113:
        name: 'amazon-eks-node-1.13-v20??????'
        owner-id: '602401143452'
      AMZNEKS113GPU:
        name: 'amazon-eks-gpu-node-1.13-v20??????'
        owner-id: '602401143452'
      AMZNEKS111:
        name: 'amazon-eks-node-1.11-v20??????'
        owner-id: '602401143452'
      AMZNEKS111GPU:
        name: 'amazon-eks-gpu-node-1.11-v20??????'
        owner-id: '602401143452'
      AMZNEKS112:
        name: 'amazon-eks-node-1.12-v20??????'
        owner-id: '602401143452'
      AMZNEKS112GPU:
        name: 'amazon-eks-gpu-node-1.12-v20??????'
        owner-id: '602401143452'
      SLES15EKS113:
        name: 'suse-sles-15-v20??????-hvm-ssd-x86_64'
        owner-id: '013907871322'
      SLES15EKS113GPU:
        name: 'suse-sles-15-v20??????-hvm-ssd-x86_64'
        owner-id: '013907871322'
      SLES15EKS111:
        name: 'suse-sles-15-v20??????-hvm-ssd-x86_64'
        owner-id: '013907871322'
      SLES15EKS111GPU:
        name: 'suse-sles-15-v20??????-hvm-ssd-x86_64'
        owner-id: '013907871322'
      SLES15EKS112:
        name: 'suse-sles-15-v20??????-hvm-ssd-x86_64'
        owner-id: '013907871322'
      SLES15EKS112GPU:
        name: 'suse-sles-15-v20??????-hvm-ssd-x86_64'
        owner-id: '013907871322'
Parameters:
  KeyPairName:
    Description: Name of an existing EC2 key pair. All instances will launch with
      this key pair.
    Type: AWS::EC2::KeyPair::KeyName
  NodeAMIOS:
    AllowedValues:
      - Amazon-Linux-HVM
      - SUSE-SLES-15-HVM
    Default: Amazon-Linux-HVM
    Description: The Linux distribution for the AMI to be used for the node
      instances.
    Type: String
  PrivateSubnet1ID:
    Description: ID of private subnet 1 in Availability Zone 1 for the Workload (e.g.,
      subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2ID:
    Description: ID of private subnet 2 in Availability Zone 2 for the Workload (e.g.,
      subnet-b1f432cd)
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet3ID:
    Description: ID of private subnet 3 in Availability Zone 3 for the Workload (e.g.,
      subnet-b1f4a2cd)
    Type: AWS::EC2::Subnet::Id
  VPCID:
    Description: ID of your existing VPC for deployment
    Type: AWS::EC2::VPC::Id
  NodeInstanceType:
    Default: t3.medium
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Node instances
    Type: String
  NumberOfNodes:
    Default: 3
    Description: Number of EKS node instances
    Type: Number
  MaxNumberOfNodes:
    Default: ""
    Description: "[OPTIONAL] The maximum number of Amazon EKS node instances, if left blank will be set to the same value as NumberOfNodes"
    Type: String
  NodeGroupName:
    Default: Default
    Description: Name for EKS node group
    Type: String
  NodeVolumeSize:
    Default: 20
    Description: Size for node volumes
    Type: String
  EKSControlPlane:
    Description: Name of the EKS cluster to join
    Type: String
  BootstrapArguments:
    Description: Arguments to pass to the bootstrap script. See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami
    Type: String
    Default: ""
  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  NodeInstanceProfile:
    Type: String
  NodeInstanceRoleName:
    Type: String
  KubernetesVersion:
    Type: String
    AllowedValues: [ "1.13", "1.12", "1.11" ]
    Default: "1.13"
  TargetGroupARNs:
    Type: CommaDelimitedList
    Default: ""
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), dots(.) and forward slash (/).
    Default: quickstart-amazon-eks/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), dots(.) and
      forward slash (/).
    Type: String
  CustomAmiId:
    Type: String
    Default: ""
Conditions:
  MaxNodes: !Not [ !Equals [ !Ref MaxNumberOfNodes, "" ] ]
  AmznOS: !Equals
    - !Ref NodeAMIOS
    - Amazon-Linux-HVM
  SuseOS: !Equals
    - !Ref NodeAMIOS
    - SUSE-SLES-15-HVM
  DisableTargetGroups: !Equals
    - !Join [",", !Ref 'TargetGroupARNs' ]
    - ""
  IsSingleInstance: !Equals
    - !Ref NumberOfNodes
    - 1
  UseCustomAmi: !Not [ !Equals [ !Ref CustomAmiId, "" ] ]
Mappings:
  K8sVersionMap:
    "1.12":
      BinaryPath: 1.12.7/2019-03-27/bin/linux/amd64
      STD: EKS112
      GPU: EKS112GPU
    "1.11":
      BinaryPath: 1.11.9/2019-03-27/bin/linux/amd64
      STD: EKS111
      GPU: EKS111GPU
    "1.13":
      BinaryPath: 1.13.7/2019-06-11/bin/linux/amd64
      STD: EKS113
      GPU: EKS113GPU
  InstanceTypes:
    t2.small: { Type: STD }
    t2.medium: { Type: STD }
    t2.large: { Type: STD }
    t2.xlarge: { Type: STD }
    t2.2xlarge: { Type: STD }
    t3.nano: { Type: STD }
    t3.micro: { Type: STD }
    t3.small: { Type: STD }
    t3.medium: { Type: STD }
    t3.large: { Type: STD }
    t3.xlarge: { Type: STD }
    t3.2xlarge: { Type: STD }
    m3.medium: { Type: STD }
    m3.large: { Type: STD }
    m3.xlarge: { Type: STD }
    m3.2xlarge: { Type: STD }
    m4.large: { Type: STD }
    m4.xlarge: { Type: STD }
    m4.2xlarge: { Type: STD }
    m4.4xlarge: { Type: STD }
    m4.10xlarge: { Type: STD }
    m5.large: { Type: STD }
    m5.xlarge: { Type: STD }
    m5.2xlarge: { Type: STD }
    m5.4xlarge: { Type: STD }
    m5.12xlarge: { Type: STD }
    m5.24xlarge: { Type: STD }
    c4.large: { Type: STD }
    c4.xlarge: { Type: STD }
    c4.2xlarge: { Type: STD }
    c4.4xlarge: { Type: STD }
    c4.8xlarge: { Type: STD }
    c5.large: { Type: STD }
    c5.xlarge: { Type: STD }
    c5.2xlarge: { Type: STD }
    c5.4xlarge: { Type: STD }
    c5.9xlarge: { Type: STD }
    c5.18xlarge: { Type: STD }
    i3.large: { Type: STD }
    i3.xlarge: { Type: STD }
    i3.2xlarge: { Type: STD }
    i3.4xlarge: { Type: STD }
    i3.8xlarge: { Type: STD }
    i3.16xlarge: { Type: STD }
    r3.xlarge: { Type: STD }
    r3.2xlarge: { Type: STD }
    r3.4xlarge: { Type: STD }
    r3.8xlarge: { Type: STD }
    r4.large: { Type: STD }
    r4.xlarge: { Type: STD }
    r4.2xlarge: { Type: STD }
    r4.4xlarge: { Type: STD }
    r4.8xlarge: { Type: STD }
    r4.16xlarge: { Type: STD }
    x1.16xlarge: { Type: STD }
    x1.32xlarge: { Type: STD }
    p2.xlarge: { Type: GPU }
    p2.8xlarge: { Type: GPU }
    p2.16xlarge: { Type: GPU }
    p3.2xlarge: { Type: GPU }
    p3.8xlarge: { Type: GPU }
    p3.16xlarge: { Type: GPU }
    r5.large: { Type: STD }
    r5.xlarge: { Type: STD }
    r5.2xlarge: { Type: STD }
    r5.4xlarge: { Type: STD }
    r5.12xlarge: { Type: STD }
    r5.24xlarge: { Type: STD }
    r5d.large: { Type: STD }
    r5d.xlarge: { Type: STD }
    r5d.2xlarge: { Type: STD }
    r5d.4xlarge: { Type: STD }
    r5d.12xlarge: { Type: STD }
    r5d.24xlarge: { Type: STD }
    z1d.large: { Type: STD }
    z1d.xlarge: { Type: STD }
    z1d.2xlarge: { Type: STD }
    z1d.3xlarge: { Type: STD }
    z1d.6xlarge: { Type: STD }
    z1d.12xlarge: { Type: STD }
  OStoK8sVersionMap:
    Amazon-Linux-HVM:
      EKS112: AMZNEKS112
      EKS112GPU: AMZNEKS112GPU
      EKS111: AMZNEKS111
      EKS111GPU: AMZNEKS111GPU
      EKS113: AMZNEKS113
      EKS113GPU: AMZNEKS113GPU
    SUSE-SLES-15-HVM:
      EKS112: SLES15EKS112
      EKS112GPU: SLES15EKS112GPU
      EKS111: SLES15EKS111
      EKS111GPU: SLES15EKS111GPU
      EKS113: SLES15EKS113
      EKS113GPU: SLES15EKS113GPU
  AWSAMIRegionMap:
    ap-northeast-1:
      AMZNEKS113: ami-0262013b4d50142a2
      AMZNEKS113GPU: ami-0a443fa8decd2df67
      AMZNEKS111: ami-0acea8b886f0e3f8f
      AMZNEKS111GPU: ami-0dc2541c99f0623e1
      AMZNEKS112: ami-08b2cecec9f2d5964
      AMZNEKS112GPU: ami-0364b5f7211f80363
      SLES15EKS113: ami-056ac8ad44e6a7e1f
      SLES15EKS113GPU: ami-056ac8ad44e6a7e1f
      SLES15EKS111: ami-056ac8ad44e6a7e1f
      SLES15EKS111GPU: ami-056ac8ad44e6a7e1f
      SLES15EKS112: ami-056ac8ad44e6a7e1f
      SLES15EKS112GPU: ami-056ac8ad44e6a7e1f
    ap-northeast-2:
      AMZNEKS113: ami-0d9a543e7c4279c11
      AMZNEKS113GPU: ami-019966f3e72baba33
      AMZNEKS111: ami-01e754bb06dedfd13
      AMZNEKS111GPU: ami-013299f00c1c965d4
      AMZNEKS112: ami-0bbe543cd7fc2acd1
      AMZNEKS112GPU: ami-08704c644f2f284bb
      SLES15EKS113: ami-0f81fff879bafe6b8
      SLES15EKS113GPU: ami-0f81fff879bafe6b8
      SLES15EKS111: ami-0f81fff879bafe6b8
      SLES15EKS111GPU: ami-0f81fff879bafe6b8
      SLES15EKS112: ami-0f81fff879bafe6b8
      SLES15EKS112GPU: ami-0f81fff879bafe6b8
    ap-south-1:
      AMZNEKS113: ami-00f4cff050d28ee2d
      AMZNEKS113GPU: ami-0e80f1d31941f6010
      AMZNEKS111: ami-0fee6e6300019359b
      AMZNEKS111GPU: ami-067c840a5dce7fe27
      AMZNEKS112: ami-0d9c7adc50f0c3f04
      AMZNEKS112GPU: ami-008ab31273984feb4
    ap-southeast-1:
      AMZNEKS113: ami-0013f4890e2ce167b
      AMZNEKS113GPU: ami-07f34d09a8d7fe5a4
      AMZNEKS111: ami-04aff8301e51a47e4
      AMZNEKS111GPU: ami-07e5bc491d2ec43e1
      AMZNEKS112: ami-07696966feacc8e7b
      AMZNEKS112GPU: ami-044d6be5df6aa258e
      SLES15EKS113: ami-070356c21596ddc67
      SLES15EKS113GPU: ami-070356c21596ddc67
      SLES15EKS111: ami-070356c21596ddc67
      SLES15EKS111GPU: ami-070356c21596ddc67
      SLES15EKS112: ami-070356c21596ddc67
      SLES15EKS112GPU: ami-070356c21596ddc67
    ap-southeast-2:
      AMZNEKS113: ami-01cd15b342b7edf5e
      AMZNEKS113GPU: ami-03563e56d0af30647
      AMZNEKS111: ami-0cb611c369549e9c9
      AMZNEKS111GPU: ami-04b5a2ebc54d30b11
      AMZNEKS112: ami-07621fc1a7675f06c
      AMZNEKS112GPU: ami-002dcfad1b6044f1d
      SLES15EKS113: ami-0c4245381c67efb39
      SLES15EKS113GPU: ami-0c4245381c67efb39
      SLES15EKS111: ami-0c4245381c67efb39
      SLES15EKS111GPU: ami-0c4245381c67efb39
      SLES15EKS112: ami-0c4245381c67efb39
      SLES15EKS112GPU: ami-0c4245381c67efb39
    eu-central-1:
      AMZNEKS113: ami-01ffee931e45bb6bf
      AMZNEKS113GPU: ami-0e262bd06b1cbc1d6
      AMZNEKS111: ami-0157324517811932f
      AMZNEKS111GPU: ami-0147c8fcfea398609
      AMZNEKS112: ami-0fe22fc725c19301f
      AMZNEKS112GPU: ami-0a697401e7cfa02bd
      SLES15EKS113: ami-05dfd265ea534a3e9
      SLES15EKS113GPU: ami-05dfd265ea534a3e9
      SLES15EKS111: ami-05dfd265ea534a3e9
      SLES15EKS111GPU: ami-05dfd265ea534a3e9
      SLES15EKS112: ami-05dfd265ea534a3e9
      SLES15EKS112GPU: ami-05dfd265ea534a3e9
    eu-north-1:
      AMZNEKS113: ami-01d7a7c38f882ef68
      AMZNEKS113GPU: ami-0b219ca1c6aa2f7fb
      AMZNEKS111: ami-019c885c71264830f
      AMZNEKS111GPU: ami-0a2aefc5b3775e1da
      AMZNEKS112: ami-0586fb63f5c466e3c
      AMZNEKS112GPU: ami-0051b31561a86c5fb
      SLES15EKS113: ami-0741fa1a008af40ad
      SLES15EKS113GPU: ami-0741fa1a008af40ad
      SLES15EKS111: ami-0741fa1a008af40ad
      SLES15EKS111GPU: ami-0741fa1a008af40ad
      SLES15EKS112: ami-0741fa1a008af40ad
      SLES15EKS112GPU: ami-0741fa1a008af40ad
    eu-west-1:
      AMZNEKS113: ami-00ea6211202297fe8
      AMZNEKS113GPU: ami-05cded29b25d50f91
      AMZNEKS111: ami-0ed6bcde59efbec8a
      AMZNEKS111GPU: ami-01f0f9e4092c0f784
      AMZNEKS112: ami-0a6be9528ebb8999d
      AMZNEKS112GPU: ami-049574de1981b69dc
      SLES15EKS113: ami-0a58a1b152ba55f1d
      SLES15EKS113GPU: ami-0a58a1b152ba55f1d
      SLES15EKS111: ami-0a58a1b152ba55f1d
      SLES15EKS111GPU: ami-0a58a1b152ba55f1d
      SLES15EKS112: ami-0a58a1b152ba55f1d
      SLES15EKS112GPU: ami-0a58a1b152ba55f1d
    eu-west-2:
      AMZNEKS113: ami-0ef7099142dae7023
      AMZNEKS113GPU: ami-0163f3b1681613866
      AMZNEKS111: ami-0b2d004b35f3153c4
      AMZNEKS111GPU: ami-024af210119b7a9f8
      AMZNEKS112: ami-0a8dc5b3290842d3e
      AMZNEKS112GPU: ami-009594e276ffd81b0
      SLES15EKS113: ami-01497522185aaa4ee
      SLES15EKS113GPU: ami-01497522185aaa4ee
      SLES15EKS111: ami-01497522185aaa4ee
      SLES15EKS111GPU: ami-01497522185aaa4ee
      SLES15EKS112: ami-01497522185aaa4ee
      SLES15EKS112GPU: ami-01497522185aaa4ee
    eu-west-3:
      AMZNEKS113: ami-00cc28b5bcb9dc724
      AMZNEKS113GPU: ami-0bc7f58961988d81e
      AMZNEKS111: ami-0c592c8c15d5a2824
      AMZNEKS111GPU: ami-00d28dcaaa9b1010a
      AMZNEKS112: ami-01dbd2d713c939649
      AMZNEKS112GPU: ami-06cb6ffbba9a766eb
      SLES15EKS113: ami-0f238bd4c6fdbefb0
      SLES15EKS113GPU: ami-0f238bd4c6fdbefb0
      SLES15EKS111: ami-0f238bd4c6fdbefb0
      SLES15EKS111GPU: ami-0f238bd4c6fdbefb0
      SLES15EKS112: ami-0f238bd4c6fdbefb0
      SLES15EKS112GPU: ami-0f238bd4c6fdbefb0
    us-east-1:
      AMZNEKS113: ami-08198f90fe8bc57f0
      AMZNEKS113GPU: ami-0b2f191b2ddb13526
      AMZNEKS111: ami-0277d42c17d2fd9f6
      AMZNEKS111GPU: ami-06dbf81822c5d802d
      AMZNEKS112: ami-0259ce67309f76e0b
      AMZNEKS112GPU: ami-0585963de7ab8b964
      SLES15EKS113: ami-0b1764f3d7d2e2316
      SLES15EKS113GPU: ami-0b1764f3d7d2e2316
      SLES15EKS111: ami-0b1764f3d7d2e2316
      SLES15EKS111GPU: ami-0b1764f3d7d2e2316
      SLES15EKS112: ami-0b1764f3d7d2e2316
      SLES15EKS112GPU: ami-0b1764f3d7d2e2316
    us-east-2:
      AMZNEKS113: ami-0355b5edf93d47112
      AMZNEKS113GPU: ami-080eaa48408e4cce8
      AMZNEKS111: ami-0f01aa60d08b56b51
      AMZNEKS111GPU: ami-06352290702ae9aa4
      AMZNEKS112: ami-0d60b7264ed85e022
      AMZNEKS112GPU: ami-043355c6f9c7b980c
      SLES15EKS113: ami-05ea824317ffc0c20
      SLES15EKS113GPU: ami-05ea824317ffc0c20
      SLES15EKS111: ami-05ea824317ffc0c20
      SLES15EKS111GPU: ami-05ea824317ffc0c20
      SLES15EKS112: ami-05ea824317ffc0c20
      SLES15EKS112GPU: ami-05ea824317ffc0c20
    us-west-2:
      AMZNEKS113: ami-0dc5bf48daa40eb35
      AMZNEKS113GPU: ami-0842679a8337cad05
      AMZNEKS111: ami-0e024bc930f00f7a2
      AMZNEKS111GPU: ami-01ccb69d4e42d3098
      AMZNEKS112: ami-0315dd35bf204311d
      AMZNEKS112GPU: ami-04f40a6dd1cd12b3c
      SLES15EKS113: ami-0f1e3b3fb0fec0361
      SLES15EKS113GPU: ami-0f1e3b3fb0fec0361
      SLES15EKS111: ami-0f1e3b3fb0fec0361
      SLES15EKS111GPU: ami-0f1e3b3fb0fec0361
      SLES15EKS112: ami-0f1e3b3fb0fec0361
      SLES15EKS112GPU: ami-0f1e3b3fb0fec0361
Resources:
  NodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for all nodes in the node group
      VpcId: !Ref VPCID
      Tags:
        - Key: !Sub "kubernetes.io/cluster/${EKSControlPlane}"
          Value: 'owned'
  NodeSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow nodes to communicate with each other
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: '-1'
      FromPort: 0
      ToPort: 65535
  NodeSecurityGroupFromControlPlaneIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow worker Kubelets and pods to receive communication from the cluster control plane
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 1025
      ToPort: 65535
  ControlPlaneEgressToNodeSecurityGroup:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow the cluster control plane to communicate with worker Kubelet and pods
      GroupId: !Ref ControlPlaneSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 1025
      ToPort: 65535
  NodeSecurityGroupFromControlPlaneOn443Ingress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow pods running extension API servers on port 443 to receive communication from cluster control plane
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
  ControlPlaneEgressToNodeSecurityGroupOn443:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow the cluster control plane to communicate with pods running extension API servers on port 443
      GroupId: !Ref ControlPlaneSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
  ClusterControlPlaneSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow pods to communicate with the cluster API Server
      GroupId: !Ref ControlPlaneSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
  NodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref NumberOfNodes
      LaunchConfigurationName: !Ref NodeLaunchConfig
      MinSize: !Ref NumberOfNodes
      MaxSize: !If [ MaxNodes, !Ref MaxNumberOfNodes, !Ref NumberOfNodes ]
      VPCZoneIdentifier: [ !Ref PrivateSubnet1ID, !Ref PrivateSubnet2ID, !Ref PrivateSubnet3ID ]
      TargetGroupARNs: !If [ DisableTargetGroups, !Ref "AWS::NoValue", !Ref TargetGroupARNs ]
      Tags:
        - Key: Name
          Value: !Sub "${EKSControlPlane}-${NodeGroupName}-Node"
          PropagateAtLaunch: true
        - Key: !Sub 'kubernetes.io/cluster/${EKSControlPlane}'
          Value: 'owned'
          PropagateAtLaunch: true
        - Key: k8s.io/cluster-autoscaler/enabled
          Value: 'true'
          PropagateAtLaunch: true
        - Key: !Sub 'k8s.io/cluster-autoscaler/${EKSControlPlane}'
          Value: ''
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: !Ref NumberOfNodes
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: !If [IsSingleInstance, 0, 1]
        MaxBatchSize: 1
        WaitOnResourceSignals : true
        PauseTime: PT15M
  NodeLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Auth:
          buckets:
            - !Ref QSS3BucketName
          roleName: !Ref NodeInstanceRoleName
          type: S3
      AWS::CloudFormation::Init:
        config:
          files:
            /tmp/worker/bootstrap.sh:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/bootstrap.sh
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/docker-daemon.json:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/docker-daemon.json
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/eni-max-pods.txt:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/eni-max-pods.txt
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/install-worker.sh:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/install-worker.sh
              group: root
              owner: root
              mode: '000755'
              authentication: S3Auth
            /tmp/worker/kubelet-config.json:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/kubelet-config.json
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/kubelet-kubeconfig:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/kubelet-kubeconfig
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/kubelet.service:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/kubelet.service
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/logrotate-kube-proxy:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/logrotate-kube-proxy
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
          commands:
            a-install:
              command: /tmp/worker/install-worker.sh
              env:
                BINARY_BUCKET_NAME: amazon-eks
                BINARY_BUCKET_PATH: !FindInMap
                  - K8sVersionMap
                  - !Ref KubernetesVersion
                  - BinaryPath
                BINARY_BUCKET_REGION: us-west-2
            b-bootstrap:
              command: !Sub /etc/eks/bootstrap.sh ${EKSControlPlane} ${BootstrapArguments}
    Properties:
      AssociatePublicIpAddress: false
      IamInstanceProfile: !Ref NodeInstanceProfile
      ImageId: !If
        - UseCustomAmi
        - !Ref CustomAmiId
        - !FindInMap
          - AWSAMIRegionMap
          - !Ref "AWS::Region"
          - !FindInMap
            - OStoK8sVersionMap
            - !Ref NodeAMIOS
            - !FindInMap
              - K8sVersionMap
              - !Ref KubernetesVersion
              - !FindInMap
                - InstanceTypes
                - !Ref NodeInstanceType
                - Type
      InstanceType: !Ref NodeInstanceType
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref NodeSecurityGroup
      BlockDeviceMappings:
        - DeviceName: !If [ SuseOS, /dev/sda1, /dev/xvda ]
          Ebs:
            VolumeSize: !Ref NodeVolumeSize
            VolumeType: gp2
            DeleteOnTermination: true
      UserData: !If
        - AmznOS
        - Fn::Base64:
            !Sub |
            #!/bin/bash
            set -o xtrace
            /etc/eks/bootstrap.sh ${EKSControlPlane} ${BootstrapArguments}
            /opt/aws/bin/cfn-signal --exit-code $? \
                  --stack  ${AWS::StackName} \
                  --resource NodeGroup  \
                  --region ${AWS::Region}
        - Fn::Base64:
            !Sub |
            #!/bin/bash -e

            if [ -e /etc/os-release ] && grep SLES /etc/os-release; then
                zypper in -y python2-setuptools
                update-alternatives --set easy_install /usr/bin/easy_install-2.7
            fi

            easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.zip
            /usr/bin/cfn-init \
                --stack ${AWS::StackName} \
                --resource NodeLaunchConfig \
                --region ${AWS::Region}
            /usr/bin/cfn-signal --exit-code $? \
                --stack ${AWS::StackName} \
                --resource NodeGroup \
                --region ${AWS::Region}
            if [ -e /etc/os-release ] && grep SLES /etc/os-release; then
                # Need to enable some kernel boot options and reboot
                sed -i 's|GRUB_CMDLINE_LINUX=""|GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1" |' /etc/default/grub
                grub2-mkconfig -o /boot/grub2/grub.cfg
                reboot
            fi
Outputs:
  EKSNodeSecurityGroup:
    Value: !Ref NodeSecurityGroup
  NodeAutoScalingGroup:
    Value: !Ref NodeGroup
